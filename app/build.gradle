apply from: "${rootProject.rootDir}/UnreBleConfig.gradle"
apply plugin: 'com.android.application'
apply plugin: 'com.jakewharton.butterknife'


// 定义一个打包时间
def releaseTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}

android {
    project.ext.setDefaultConfig project
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
    defaultConfig {
        applicationId rootProject.ext.applicationId
        //javaCompileOptions { annotationProcessorOptions { includeCompileClasspath = true } }
//        externalNativeBuild {
//            cmake {
//                //path "src/main/cpp/CMakeLists.txt"
//                cppFlags ""
//            }
//            ndkBuild{
//                //path file("src\\main\\jni\\Android.mk")
//            }
//        }
        //目录指向配置
        sourceSets {
            //设置依赖so库路径
            main.jniLibs.srcDirs = ['libs']
        }
        //ndk {
        //    // 设置支持的SO库架构(cpu)
        //    abiFilters 'armeabi', 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        //}
        signingConfigs {
            //签名配置
            release {
                keyAlias SIGN_RELEASE_KEYALIAS
                keyPassword SIGN_RELEASE_KEYPASSWORD
                storeFile file(SIGN_RELEASE_STOREFILE)
                storePassword SIGN_RELEASE_STOREPASSWORD
                v1SigningEnabled true
                v2SigningEnabled true
            }
            debug {
                keyAlias SIGN_DEBUG_KEYALIAS
                keyPassword SIGN_DEBUG_KEYPASSWORD
                storeFile file(SIGN_DEBUG_STOREFILE)
                storePassword SIGN_DEBUG_STOREPASSWORD
                v1SigningEnabled true
                v2SigningEnabled true
            }
        }
        //MultiDex分包方法
        multiDexEnabled true
        flavorDimensions "UnreFace"//增加扩展纬度
    }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
    /////////////////////////////////////////////////
    buildTypes {
        debug {
            //是否进行混淆
            minifyEnabled false
            // 混淆文件的位置
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //配置签名文件
            //signingConfig signingConfigs.release
        }
        release {
            //需要 lint.jar (com.android.tools.lint:lint:26.3.0) 作为资源检查
            //https://dl.google.com/dl/android/maven2/com/android/tools/lint/lint/26.3.0/lint-26.3.0.jar
            minifyEnabled false
            //是否清理无用资源,依赖于minifyEnabled
            shrinkResources false
            //是否启用zipAlign压缩
            zipAlignEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //配置签名文件
            signingConfig signingConfigs.release
            //配置apk路径
            applicationVariants.all { variant ->
                def buildType = variant.buildType.name
                if (buildType == 'release') {
                    variant.getPackageApplication().outputDirectory = new File(rootProject.rootDir, "release")
                    // variant.getPackageApplication().outputDirectory = new File("F:/apk/frameDemoApk","releaseApk")
                    variant.outputs.each { output ->
                        def outputFile = output.outputFile
                        if (outputFile != null && outputFile.name.endsWith('.apk')) {
                            // 输出apk名称为XXX20160328_v1.0.0_vc10_XXXX_test.apk
                            def fileName = "Unre_${releaseTime()}_v${rootProject.ext.versionName}.apk"
                            //  output.outputFile 改为 outputFileName
                            output.apkData.outputFileName = fileName
                        }
                    }
                }
            }
        }
    }
}

dependencies {
    //leak check 内存泄露检查。release 版本不会安装
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$rootProject.leakcanary"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$rootProject.leakcanary"
    testImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$rootProject.leakcanary"
    //////////////////////////////////////////////////////////
    api 'org.greenrobot:eventbus:3.0.0'
    api "com.jakewharton:butterknife:$rootProject.butterknifeVersion"
    annotationProcessor "com.jakewharton:butterknife-compiler:$rootProject.butterknifeVersion"
    implementation project(':core')
    implementation project(':unreble')
}
